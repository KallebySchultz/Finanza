<?xml version="1.0" encoding="UTF-8"?>
<project name="FinanzaServer" default="jar" basedir=".">
    <description>
        Finanza Server - TCP Server for Financial Management System
        Build with Ant for Java server application
    </description>

    <!-- Properties -->
    <property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="dist.dir" value="dist"/>
    <property name="jar.name" value="finanza-server.jar"/>
    <property name="main.class" value="server.FinanzaServer"/>
    <property name="server.port" value="8080"/>

    <!-- Info target -->
    <target name="info" description="Show project information">
        <echo message="=================================================="/>
        <echo message="Finanza Server Application"/>
        <echo message="=================================================="/>
        <echo message="Java version: ${ant.java.version}"/>
        <echo message="Source directory: ${src.dir}"/>
        <echo message="Build directory: ${build.dir}"/>
        <echo message="Distribution directory: ${dist.dir}"/>
        <echo message="Main class: ${main.class}"/>
        <echo message="Default server port: ${server.port}"/>
        <echo message="=================================================="/>
    </target>

    <!-- Create directories -->
    <target name="init" description="Create build directories">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <!-- Compile -->
    <target name="compile" depends="init" description="Compile Java source files">
        <echo message="Compiling Java source files..."/>
        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               includeantruntime="false"
               debug="true"
               deprecation="true">
            <compilerarg value="-Xlint:unchecked"/>
        </javac>
        
        <!-- Copy resources -->
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        
        <echo message="Compilation completed successfully"/>
    </target>

    <!-- Create JAR -->
    <target name="jar" depends="compile" description="Create executable JAR file">
        <echo message="Creating JAR file..."/>
        
        <!-- Create manifest -->
        <manifest file="${build.dir}/MANIFEST.MF">
            <attribute name="Main-Class" value="${main.class}"/>
            <attribute name="Implementation-Title" value="Finanza Server"/>
            <attribute name="Implementation-Version" value="1.0"/>
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Built-Date" value="${TODAY}"/>
        </manifest>
        
        <!-- Create JAR -->
        <jar destfile="${dist.dir}/${jar.name}"
             manifest="${build.dir}/MANIFEST.MF">
            <fileset dir="${classes.dir}"/>
        </jar>
        
        <echo message="JAR created: ${dist.dir}/${jar.name}"/>
    </target>

    <!-- Run server -->
    <target name="run" depends="jar" description="Run the server application">
        <echo message="Starting Finanza Server on port ${server.port}..."/>
        <java jar="${dist.dir}/${jar.name}" 
              fork="true"
              failonerror="true">
            <arg value="${server.port}"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
        </java>
    </target>

    <!-- Start server in background -->
    <target name="start" depends="jar" description="Start server in background">
        <echo message="Starting Finanza Server in background on port ${server.port}..."/>
        <java jar="${dist.dir}/${jar.name}" 
              fork="true"
              spawn="true">
            <arg value="${server.port}"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
        </java>
        <echo message="Server started in background. Check console output."/>
    </target>

    <!-- Stop server (basic implementation) -->
    <target name="stop" description="Stop the server">
        <echo message="To stop the server, use Ctrl+C or kill the Java process."/>
        <echo message="Server PID can be found using: ps aux | grep finanza-server"/>
    </target>

    <!-- Test server connectivity -->
    <target name="test" depends="compile" description="Test server connectivity with test client">
        <echo message="Testing server connectivity with test client..."/>
        <echo message="Make sure the server is running first: ant start"/>
        <java classname="util.TestClient" 
              classpath="${classes.dir}"
              fork="true"
              failonerror="false">
        </java>
    </target>

    <!-- Clean build artifacts -->
    <target name="clean" description="Clean build artifacts">
        <echo message="Cleaning build artifacts..."/>
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <echo message="Clean completed"/>
    </target>

    <!-- Default target -->
    <target name="default" depends="jar" description="Default target - compile and create JAR"/>

</project>
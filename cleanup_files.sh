#!/bin/bash

# Finanza - Script de Limpeza Segura
# Remove arquivos in√∫teis identificados na an√°lise

echo "üßπ FINANZA - LIMPEZA DE ARQUIVOS IN√öTEIS"
echo "========================================"
echo

# Fun√ß√£o para confirmar a√ß√£o
confirm() {
    read -p "$1 (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[YySs]$ ]]; then
        return 0
    else
        return 1
    fi
}

# Fun√ß√£o para remover arquivo com confirma√ß√£o
safe_remove() {
    local file="$1"
    local reason="$2"
    
    if [ -e "$file" ]; then
        echo "üìÅ Encontrado: $file"
        echo "   Raz√£o: $reason"
        if confirm "   Excluir este arquivo?"; then
            rm -rf "$file"
            echo "   ‚úÖ Removido com sucesso!"
            return 0
        else
            echo "   ‚è≠Ô∏è  Pulado"
            return 1
        fi
    else
        echo "‚ùå Arquivo n√£o encontrado: $file"
        return 1
    fi
    echo
}

# Arquivos com exclus√£o 100% segura
echo "üîí ARQUIVOS DE EXCLUS√ÉO SEGURA"
echo "------------------------------"

removed_count=0
space_saved=0

# 1. DESKTOP VERSION.rar (redundante)
if safe_remove "DESKTOP VERSION.rar" "Arquivo comprimido redundante (1.5MB)"; then
    removed_count=$((removed_count + 1))
    space_saved=$((space_saved + 1536))
fi

# 2. verify_netbeans.sh (desatualizado)
if safe_remove "verify_netbeans.sh" "Script desatualizado para NetBeans inexistente (4KB)"; then
    removed_count=$((removed_count + 1))
    space_saved=$((space_saved + 4))
fi

echo
echo "‚ö†Ô∏è  ARQUIVOS DE EXCLUS√ÉO OPCIONAL"
echo "--------------------------------"

# 3. firebase-test.html (ferramenta de teste)
if safe_remove "firebase-test.html" "Arquivo de teste Firebase (20KB) - √∫til para depura√ß√£o"; then
    removed_count=$((removed_count + 1))
    space_saved=$((space_saved + 20))
fi

# 4. .idea/ (configura√ß√µes IDE)
if safe_remove ".idea/" "Configura√ß√µes do IDE (44KB) - regener√°vel mas √∫til"; then
    removed_count=$((removed_count + 1))
    space_saved=$((space_saved + 44))
fi

echo
echo "üìä RESUMO DA LIMPEZA"
echo "===================="
echo "üóëÔ∏è  Arquivos removidos: $removed_count"
echo "üíæ Espa√ßo economizado: ${space_saved}KB (~$(echo "scale=1; $space_saved/1024" | bc)MB)"
echo

if [ $removed_count -gt 0 ]; then
    echo "‚úÖ Limpeza conclu√≠da com sucesso!"
    echo "üí° Os arquivos foram removidos do sistema de arquivos"
    echo "üìã Para confirmar no Git, execute: git add . && git commit -m 'Limpeza: removidos arquivos in√∫teis'"
else
    echo "‚ÑπÔ∏è  Nenhum arquivo foi removido"
fi

echo
echo "üìñ Para mais detalhes, consulte: CLEANUP_ANALYSIS.md"